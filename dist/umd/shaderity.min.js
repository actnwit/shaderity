!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Shaderity=t():e.Shaderity=t()}(window,(function(){return function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="./../../dist/",i(i.s=1)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{static _splitByLineFeedCode(e){return e.split(/\r\n|\n/)}static _joinSplittedLine(e){return e.join("\n")}static _addLineFeedCodeIfNotNullString(e){return""===e?e:e+"\n"}static _componentNumber(e){let t;return"float"===e||"int"===e||"bool"===e||"uint"===e||"sampler2D"===e||"samplerCube"===e||"sampler3D"===e||"sampler2DArray"===e||"isampler2D"===e||"isamplerCube"===e||"isampler3D"===e||"isampler2DArray"===e||"usampler2D"===e||"usamplerCube"===e||"usampler3D"===e||"usampler2DArray"===e||"sampler2DShadow"===e||"samplerCubeShadow"===e||"sampler2DArrayShadow"===e?t=1:"vec2"===e||"ivec2"===e||"bvec2"===e||"uvec2"===e?t=2:"vec3"===e||"ivec3"===e||"bvec3"===e||"uvec3"===e?t=3:"vec4"===e||"ivec4"===e||"bvec4"===e||"uvec4"===e||"mat2"===e||"mat2x2"===e?t=4:"mat2x3"===e||"mat3x2"===e?t=6:"mat2x4"===e||"mat4x2"===e?t=8:"mat3"===e||"mat3x3"===e?t=9:"mat3x4"===e||"mat4x3"===e?t=12:"mat4"===e||"mat4x4"===e?t=16:(t=0,console.error("Utility._componentNumber: detect unknown type")),t}static _isIntType(e){return"int"===e||"ivec2"===e||"ivec3"===e||"ivec4"===e||"uint"===e||"uvec2"===e||"uvec3"===e||"uvec4"===e}static _isValidComponentCount(e,t){return n._componentNumber(e)===t.length}static _isSamplerType(e){return"sampler2D"===e||"samplerCube"===e||"sampler3D"===e||"sampler2DArray"===e||"isampler2D"===e||"isamplerCube"===e||"isampler3D"===e||"isampler2DArray"===e||"usampler2D"===e||"usamplerCube"===e||"usampler3D"===e||"usampler2DArray"===e||"sampler2DShadow"===e||"samplerCubeShadow"===e||"sampler2DArrayShadow"===e}}t.default=n},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(i(2));t.default=r.default},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(i(3)),a=n(i(4)),o=n(i(5)),s=n(i(0)),l=n(i(6)),c=n(i(7));t.default=class{static transformToGLSLES1(e,t=!1){const i=s.default._splitByLineFeedCode(e.code),n=a.default._transformToGLSLES1(i,e.isFragmentShader,t);return{code:s.default._joinSplittedLine(n),shaderStage:e.shaderStage,isFragmentShader:e.isFragmentShader}}static transformToGLSLES3(e){const t=s.default._splitByLineFeedCode(e.code),i=a.default._transformToGLSLES3(t,e.isFragmentShader);return{code:s.default._joinSplittedLine(i),shaderStage:e.shaderStage,isFragmentShader:e.isFragmentShader}}static transformTo(e,t,i=!1){const n=s.default._splitByLineFeedCode(t.code),r=a.default._transformTo(e,n,t.isFragmentShader,i);return{code:s.default._joinSplittedLine(r),shaderStage:t.shaderStage,isFragmentShader:t.isFragmentShader}}static processPragma(e,t,i){const n=s.default._splitByLineFeedCode(e.code),r=c.default.process(n,t,i);return{code:s.default._joinSplittedLine(r),shaderStage:e.shaderStage,isFragmentShader:e.isFragmentShader}}static createShaderityObjectCreator(e){return new l.default(e)}static fillTemplate(e,t){const i=this.__copyShaderityObject(e);return i.code=o.default._fillTemplate(i.code,t),i}static insertDefinition(e,t){const i=this.__copyShaderityObject(e),n=s.default._splitByLineFeedCode(e.code);return o.default._insertDefinition(n,t),i.code=s.default._joinSplittedLine(n),i}static createReflectionObject(e){const t=s.default._splitByLineFeedCode(e.code);return new r.default(t,e.shaderStage)}static __copyShaderityObject(e){return{code:e.code,shaderStage:e.shaderStage,isFragmentShader:e.isFragmentShader}}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e,t){this.__attributeSemanticsMap=new Map,this.__uniformSemanticsMap=new Map,this.__attributes=[],this.__varyings=[],this.__uniforms=[],this.__splittedShaderCode=e,this.__shaderStage=t,this.__setDefaultAttributeAndUniformSemanticsMap()}get attributes(){return this.__attributes}get varyings(){return this.__varyings}get uniforms(){return this.__uniforms}get attributesNames(){return this.__attributes.map(e=>e.name)}get attributesSemantics(){return this.__attributes.map(e=>e.semantic)}get attributesTypes(){return this.__attributes.map(e=>e.type)}addAttributeSemanticsMap(e){this.__attributeSemanticsMap=new Map([...this.__attributeSemanticsMap,...e])}addUniformSemanticsMap(e){this.__uniformSemanticsMap=new Map([...this.__uniformSemanticsMap,...e])}addAttributeSemantics(e,t){this.__attributeSemanticsMap.set(e,t)}addUniformSemantics(e,t){this.__uniformSemanticsMap.set(e,t)}resetAttributeSemantics(){this.__attributeSemanticsMap=new Map}resetUniformSemantics(){this.__uniformSemanticsMap=new Map}reflect(){const e=this.__splittedShaderCode,t=this.__shaderStage;for(const i of e){if(this.__matchAttribute(i,t)){this.__addAttribute(i);continue}if(this.__matchVarying(i,t)){this.__addVarying(i,t);continue}i.match(/^(?![\/])[\t ]*uniform[\t ]+/)&&this.__addUniform(i)}}__setDefaultAttributeAndUniformSemanticsMap(){this.__attributeSemanticsMap.set("position","POSITION"),this.__attributeSemanticsMap.set("color$","COLOR_0"),this.__attributeSemanticsMap.set("color_?0","COLOR_0"),this.__attributeSemanticsMap.set("texcoord$","TEXCOORD_0"),this.__attributeSemanticsMap.set("texcoord_?0","TEXCOORD_0"),this.__attributeSemanticsMap.set("texcoord_?1","TEXCOORD_1"),this.__attributeSemanticsMap.set("texcoord_?2","TEXCOORD_2"),this.__attributeSemanticsMap.set("normal","NORMAL"),this.__attributeSemanticsMap.set("tangent","TANGENT"),this.__attributeSemanticsMap.set("joint$","JOINTS_0"),this.__attributeSemanticsMap.set("bone$","JOINTS_0"),this.__attributeSemanticsMap.set("joint_?0","JOINTS_0"),this.__attributeSemanticsMap.set("bone_?0","JOINTS_0"),this.__attributeSemanticsMap.set("weight$","WEIGHTS_0"),this.__attributeSemanticsMap.set("weight_?0","WEIGHTS_0"),this.__uniformSemanticsMap.set("worldmatrix","WorldMatrix"),this.__uniformSemanticsMap.set("normalmatrix","NormalMatrix"),this.__uniformSemanticsMap.set("viewmatrix","ViewMatrix"),this.__uniformSemanticsMap.set("projectionmatrix","ProjectionMatrix"),this.__uniformSemanticsMap.set("modelviewmatrix","ModelViewMatrix")}__matchAttribute(e,t){return"vertex"===t&&e.match(/^(?![\/])[\t ]*(attribute|in)[\t ]+.+;/)}__addAttribute(e){const t={name:"",type:"float",semantic:"UNKNOWN"},i=e.match(n.attributeAndVaryingTypeRegExp);if(i){const r=i[1];t.type=r;const a=i[2];t.name=a;const o=e.match(n.semanticRegExp);if(o)t.semantic=o[1];else for(let[e,i]of this.__attributeSemanticsMap)a.match(new RegExp(e,"i"))&&(t.semantic=i)}this.__attributes.push(t)}__matchVarying(e,t){return"vertex"===t?e.match(/^(?![\/])[\t ]*(varying|out)[\t ]+.+;/):e.match(/^(?![\/])[\t ]*(varying|in)[\t ]+.+;/)}__addVarying(e,t){const i={name:"",type:"float",inout:"in"},r=e.match(n.attributeAndVaryingTypeRegExp);if(r){const e=r[1];i.type=e;const n=r[2];i.name=n,i.inout="vertex"===t?"out":"in"}this.__varyings.push(i)}__addUniform(e){const t={name:"",type:"float",semantic:"UNKNOWN"},i=e.match(n.uniformTypeRegExp);if(i){const r=i[1];t.type=r;const a=i[2];t.name=a;const o=e.match(n.semanticRegExp);if(o)t.semantic=o[1];else for(let[e,i]of this.__uniformSemanticsMap)a.match(new RegExp(e,"i"))&&(t.semantic=i)}this.__uniforms.push(t)}}t.default=n,n.attributeAndVaryingTypeRegExp=/[\t ]+(float|int|vec2|vec3|vec4|mat2|mat3|mat4|ivec2|ivec3|ivec4)[\t ]+(\w+);/,n.uniformTypeRegExp=/[\t ]+(float|int|vec2|vec3|vec4|mat2|mat3|mat4|ivec2|ivec3|ivec4|sampler2D|samplerCube|sampler3D)[\t ]+(\w+);/,n.semanticRegExp=/<.*semantic[\t ]*=[\t ]*(\w+).*>/},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{static _transformToGLSLES1(e,t,i){this.__convertOrInsertVersionGLSLES1(e),this.__removeES3Qualifier(e,i),this.__convertIn(e,t),this.__convertOut(e,t,i),this.__removePrecisionForES3(e),this.__convertTextureFunctionToES1(e,t,i);return e}static _transformToGLSLES3(e,t){this.__convertOrInsertVersionGLSLES3(e),this.__convertAttribute(e,t),this.__convertVarying(e,t),this.__convertTextureCube(e),this.__convertTexture2D(e),this.__convertTexture2DProd(e),this.__convertTexture3D(e),this.__convertTexture3DProd(e);return e}static _transformTo(e,t,i,n){return e.match(/webgl2|es3/i)?this._transformToGLSLES3(t,i):e.match(/webgl1|es1/i)?this._transformToGLSLES1(t,i,n):(console.error("Invalid Version"),t)}static __convertOrInsertVersionGLSLES1(e){this.__removeFirstMatchingLine(e,/^(?![\/])[\t ]*#[\t ]*version[\t ]+.*/),e.unshift("#version 100")}static __convertOrInsertVersionGLSLES3(e){this.__removeFirstMatchingLine(e,/^(?![\/])[\t ]*#[\t ]*version[\t ]+.*/),e.unshift("#define GLSL_ES3"),e.unshift("#version 300 es")}static __convertIn(e,t){let i;i=t?function(e,t){return"varying "+t}:function(e,t){return"attribute "+t},this.__replaceLine(e,/^(?![\/])[\t ]*in[\t ]+((highp|mediump|lowp|)[\t ]*\w+[\t ]*\w+[\t ]*;)/,i)}static __convertOut(e,t,i){if(t){const t=this.__removeOutQualifier(e,i);if(null==t)return;this.__addGLFragColor(t,e,i)}else{const t=/^(?![\/])[\t ]*out[\t ]+((highp|mediump|lowp|)[\t ]*\w+[\t ]*\w+[\t ]*;)/,i=function(e,t){return"varying "+t};this.__replaceLine(e,t,i)}}static __removeOutQualifier(e,t){const i=/^(?![\/])[\t ]*out[\t ]+((highp|mediump|lowp|)[\t ]*\w+[\t ]*(\w+)[\t ]*;)/;let n;for(let t=0;t<e.length;t++){const r=e[t].match(i);if(r){e[t]=r[1],n=r[3];break}}return n}static __addGLFragColor(e,t,i){const n=/(.*)\}[\n\t ]*$/,r=/[\n\t ]*return[\n\t ]*;/,a=/(^|^(?![\/])[\t\n ]+)void[\t\n ]+main([\t\n ]|\(|$)/,o=`  gl_FragColor = ${e};`;let s=!1;for(let e=t.length-1;e>=0;e--){const i=t[e];if(!s&&i.match(n)&&(t[e]=i.replace(n,`$1\n${o}\n}\n`),s=!0),i.match(r)&&t.splice(e,0,o),i.match(a))break}if(!s){const e="__removeOutQualifier: Not found the closing brackets for the main function";this.__outError(t,t.length,e,i)}}static __removeES3Qualifier(e,t){this.__removeVaryingQualifier(e,t),this.__removeLayout(e)}static __removeVaryingQualifier(e,t){const i=/^(?![\/])[\t ]*(flat|smooth)[\t ]*((in|out)[\t ]+.*)/;for(let n=0;n<e.length;n++)e[n]=e[n].replace(i,(i,r,a)=>"flat"===r?(this.__outError(e,n+1,"__removeVaryingQualifier: glsl es1 does not support flat qualifier",t),i):a)}static __removeLayout(e){this.__replaceLine(e,/^(?![\/])[\t ]*layout[\t ]*\([\t ]*location[\t ]*\=[\t ]*\d[\t ]*\)[\t ]+/g,"")}static __removePrecisionForES3(e){const t=/^(?![\/])[\t ]*precision[\t ]+(highp|mediump|lowp)[\t ]+(\w+)[\t ]*;/;for(let i=0;i<e.length;i++){const n=e[i].match(t);if(null!=n){if("int"===n[2]||"float"===n[2]||"sampler2D"===n[2]||"samplerCube"===n[2])continue;e.splice(i--,1)}}}static __convertTextureFunctionToES1(e,t,i){var n,r;const a=this.__regSymbols(),o=new RegExp(`(${a}+)textureProj(Lod|)(${a}+)`,"g"),s=new RegExp(`(${a}+)texture(Lod|)(${a}+)`,"g");let l;const c=this.__createUniformSamplerMap(e,i);for(let a=0;a<e.length;a++){const u=e[a],_=u.match(/textureProj(Lod|)[\t ]*\([\t ]*(\w+),/);if(_){l=null!=l?l:this.__createArgumentSamplerMap(e,a,i);const r="Lod"===_[1],s=t&&r?"EXT":"",u=_[2],d=null!==(n=null==l?void 0:l.get(u))&&void 0!==n?n:c.get(u);if(null!=d)if("sampler2D"===d)e[a]=e[a].replace(o,`$1texture2DProj$2${s}$3`);else{const t="__convertTextureFunctionToES1: do not support "+d+" type";this.__outError(e,a,t,i)}continue}const d=u.match(/texture(Lod|)[\t ]*\([\t ]*(\w+),/);if(d){l=null!=l?l:this.__createArgumentSamplerMap(e,a,i);const n="Lod"===d[1],o=t&&n?"EXT":"",u=d[2],_=null!==(r=null==l?void 0:l.get(u))&&void 0!==r?r:c.get(u);if(null!=_){let t;if("sampler2D"===_)t="texture2D";else if("samplerCube"===_)t="textureCube";else{t="";const n="__convertTextureFunctionToES1: do not support "+_+" type";this.__outError(e,a,n,i)}""!==t&&(e[a]=e[a].replace(s,`$1${t}$2${o}$3`))}continue}!!u.match(/\}/)&&(l=void 0)}}static __createUniformSamplerMap(e,t){const i=new Map;for(let n=0;n<e.length;n++){const r=e[n].match(/^(?![\/])[\t ]*uniform*[\t ]*(highp|mediump|lowp|)[\t ]*(sampler\w+)[\t ]+(\w+)/);if(r){const a=r[2],o=r[3];if(i.get(o)){const i="__createUniformSamplerMap: duplicate variable name";this.__outError(e,n,i,t)}i.set(o,a)}}return i}static __createArgumentSamplerMap(e,t,i){var n,r;const a=new Map;for(let o=t;o>=0;o--){if(!!!e[o].match(/\{/))continue;const t=null===(n=this.__getBracketSection(e,o).match(/.*\((.*)\)/))||void 0===n?void 0:n[1];if(null==t)return;const s=t.split(","),l=/[\n\t ]*(highp|mediump|lowp|)[\n\t ]*(sampler\w+)[\n\t ]*(\w+)[\n\t ]*/;if(!!(null!==(r=s[0].match(l))&&void 0!==r?r:s[0].match(/^[\n\t ]*$/))){for(const t of s){const n=t.match(l);if(null==n)continue;const r=n[2],s=n[3];if(a.get(s)){const t="__createArgumentSamplerMap: duplicate variable name";this.__outError(e,o,t,i)}a.set(s,r)}break}}return a}static __getBracketSection(e,t){let i=0;for(let n=t;n>=0;n--){if(!!e[n].match(/\(/)){i=n;break}}let n="";for(let r=i;r<=t;r++)n+=e[r];return n}static __convertAttribute(e,t){if(t)return;this.__replaceLine(e,/^(?![\/])[\t ]*attribute[\t ]+/g,"in ")}static __convertVarying(e,t){const i=t?"in ":"out ";this.__replaceLine(e,/^(?![\/])[\t ]*varying[\t ]+/g,i)}static __convertTextureCube(e){const t=this.__regSymbols(),i=new RegExp(`(${t}+)(textureCube)(${t}+)`,"g");this.__replaceLine(e,i,"$1texture$3")}static __convertTexture2D(e){const t=this.__regSymbols(),i=new RegExp(`(${t}+)(texture2D)(${t}+)`,"g");this.__replaceLine(e,i,"$1texture$3")}static __convertTexture2DProd(e){const t=this.__regSymbols(),i=new RegExp(`(${t}+)(texture2DProj)(${t}+)`,"g");this.__replaceLine(e,i,"$1textureProj$3")}static __convertTexture3D(e){const t=this.__regSymbols(),i=new RegExp(`(${t}+)(texture3D)(${t}+)`,"g");this.__replaceLine(e,i,"$1texture$3")}static __convertTexture3DProd(e){const t=this.__regSymbols(),i=new RegExp(`(${t}+)(texture3DProj)(${t}+)`,"g");this.__replaceLine(e,i,"$1textureProj$3")}static __regSymbols(){return"[!\"#$%&'()*+-.,/:;<=>?@[\\]^`{|}~\t\n ]"}static __replaceLine(e,t,i){for(let n=0;n<e.length;n++)e[n]=e[n].replace(t,i)}static __removeFirstMatchingLine(e,t){for(let i=0;i<e.length;i++)if(e[i].match(t)){e.splice(i,1);break}}static __outError(e,t,i,n){if(!n)throw new Error(i);{const n=`// line ${t}: ${i}\n`,r=/(.*)\}[\n\t ]*$/;for(let t=e.length-1;t>=0;t--){if(e[t].match(r))break;if(e[t]===n)return}console.error(i),e.push(n)}}}},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=class{static _insertDefinition(e,t){const i=t.replace(/#define[\t ]+/,"");e.unshift("#define "+i)}static _fillTemplate(e,t){const i=e.replace(/\/\*[\t ]*shaderity:[\t ]*(@{[\t ]*)(\S+)([\t ]*})[\t ]*\*\//g,"${this.$2}");return new Function("return `"+i+"`;").call(t)}}},function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const r=n(i(0));class a{constructor(e){this.__functionIdCount=0,this.__defineDirectiveNames=[],this.__extensions=[],this.__globalPrecision={int:"highp",float:"highp",sampler2D:"highp",samplerCube:"highp",sampler3D:"highp",sampler2DArray:"highp",isampler2D:"highp",isamplerCube:"highp",isampler3D:"highp",isampler2DArray:"highp",usampler2D:"highp",usamplerCube:"highp",usampler3D:"highp",usampler2DArray:"highp",sampler2DShadow:"highp",samplerCubeShadow:"highp",sampler2DArrayShadow:"highp"},this.__structDefinitions=[],this.__globalConstantValues=[],this.__globalConstantStructValues=[],this.__attributes=[],this.__varyings=[],this.__uniforms=[],this.__uniformStructs=[],this.__uniformBufferObjects=[],this.__functions=[],this.__mainFunctionCode="void main() {}",this.__outputColorVariableName="renderTarget0",this.__shaderStage=e}addDefineDirective(e){this.__defineDirectiveNames.some(t=>t===e)?console.warn("addDefineDirective: this define directive is already set"):this.__defineDirectiveNames.push(e)}addExtension(e,t="enable"){this.__extensions.some(t=>t.extensionName===e)?console.warn("addExtension: this extension is already set"):this.__extensions.push({extensionName:e,behavior:t})}addStructDefinition(e,t){this.__structDefinitions.some(t=>t.structName===e)?console.error("addStructDefinition: duplicate struct type name "+e):this.__structDefinitions.push({structName:e,memberObjects:t})}addGlobalConstantValue(e,t,i){if(this.__globalConstantValues.some(t=>t.variableName===e))return void console.error("addGlobalConstantValue: duplicate variable name "+e);if(!r.default._isValidComponentCount(t,i))return void console.error(`addGlobalConstantValue: the component count of ${e} is invalid`);if(r.default._isIntType(t)){a.__existNonIntegerValue(i)&&console.warn("addGlobalConstantValue: non-integer value is set to "+e)}this.__globalConstantValues.push({variableName:e,type:t,values:i})}addGlobalConstantStructValue(e,t,i){this.__globalConstantStructValues.some(e=>e.variableName===t)?console.error("addGlobalConstantStructValue: duplicate variable name "+t):this.__globalConstantStructValues.push({variableName:t,structName:e,values:i})}addAttributeDeclaration(e,t,i){if("vertex"!==this.__shaderStage)return void console.error("addAttribute: this method is for vertex shader only");this.__attributes.some(t=>t.variableName===e)?console.error("addAttribute: duplicate variable name "+e):this.__attributes.push({variableName:e,type:t,precision:null==i?void 0:i.precision,location:null==i?void 0:i.location})}addVaryingDeclaration(e,t,i){if(this.__varyings.some(t=>t.variableName===e))return void console.error("addVarying: duplicate variable name "+e);const n=r.default._isIntType(t);let a=null==i?void 0:i.interpolationType;if(n&&"flat"!==a){if(null!=a)return void console.error("addVarying: the interpolationType must be flat for integer types");console.warn("addVarying: set the interpolationType of integer types to flat to avoid compilation error"),a="flat"}this.__varyings.push({variableName:e,type:t,precision:null==i?void 0:i.precision,interpolationType:a})}addUniformDeclaration(e,t,i){this.__uniforms.some(t=>t.variableName===e)?console.error("addUniform: duplicate variable name "+e):("bool"===t&&null!=(null==i?void 0:i.precision)&&(console.warn("addUniform: remove the specification of precision for bool type to avoid compilation error"),i.precision=void 0),this.__uniforms.push({variableName:e,type:t,precision:null==i?void 0:i.precision}))}addUniformStructDeclaration(e,t){this.__uniformStructs.some(e=>e.variableName===t)?console.error("addUniformStructDeclaration: duplicate variable name "+t):this.__uniformStructs.push({variableName:t,structName:e})}addUniformBufferObjectDeclaration(e,t,i){if(this.__uniformBufferObjects.some(t=>t.blockName===e))console.error("addUniformBufferObjectDeclaration: duplicate block name "+e);else{for(const e of this.__uniformBufferObjects)for(const i of e.variableObjects)for(const e of t)if(i.variableName===e.variableName)return void console.error("addUniformBufferObjectDeclaration: duplicate variable name "+e.variableName);this.__uniformBufferObjects.push({blockName:e,variableObjects:t,instanceName:null==i?void 0:i.instanceName})}}addFunctionDefinition(e,t){var i,n;const r=this.__functionIdCount++,a=null!==(i=null==t?void 0:t.dependencyLevel)&&void 0!==i?i:0;return this.__functions[a]=null!==(n=this.__functions[a])&&void 0!==n?n:[],this.__functions[a].push({functionCode:e,functionId:r}),r}updateGlobalPrecision(e){Object.assign(this.__globalPrecision,e)}updateStructDefinition(e,t){const i=this.__structDefinitions.findIndex(t=>t.structName===e);-1!==i?this.__structDefinitions[i].memberObjects=t:console.error(`updateStructDefinition: the struct type name ${e} is not exist`)}updateGlobalConstantValue(e,t){const i=this.__globalConstantValues.findIndex(t=>t.variableName===e);if(-1===i)return void console.warn(`updateGlobalConstantValue: the variable name ${e} is not exist`);const n=this.__globalConstantValues[i].type;if(!r.default._isValidComponentCount(n,t))return void console.error("updateGlobalConstantValue: the component count is invalid");if(r.default._isIntType(n)){a.__existNonIntegerValue(t)&&console.warn(`updateGlobalConstantValue: the ${e} has a non-integer value.`)}this.__globalConstantValues[i].values=t}updateGlobalConstantStructValue(e,t){const i=this.__globalConstantStructValues.findIndex(t=>t.variableName===e);-1!==i?this.__globalConstantStructValues[i].values=t:console.error(`updateGlobalConstantStructValue:  the variable name ${e} is not exist`)}updateMainFunction(e){this.__mainFunctionCode=e}updateOutputColorVariableName(e){"fragment"===this.__shaderStage?0!==e.length?this.__outputColorVariableName=e:console.error("updateOutputColorVariableName: invalid outColorVariableName"):console.error("updateOutputColorVariableName: this method is for fragment shader only")}removeDefineDirective(e){const t=this.__defineDirectiveNames.indexOf(e);-1!==t?this.__defineDirectiveNames.splice(t,1):console.warn("removedDefineDirective: this define directive is not exist")}removeExtension(e){const t=this.__extensions.findIndex(t=>t.extensionName===e);-1!==t?this.__extensions.splice(t,1):console.warn("removeExtension: this extension is not exist")}removeStructDefinition(e){const t=this.__structDefinitions.findIndex(t=>t.structName===e);-1!==t?this.__structDefinitions.splice(t,1):console.error(`removeStructDefinition: the struct type name ${e} is not exist`)}removeGlobalConstantValue(e){const t=this.__globalConstantValues.findIndex(t=>t.variableName===e);-1!==t?this.__globalConstantValues.splice(t,1):console.warn(`removeGlobalConstantValue: the variable name ${e} is not exist`)}removeGlobalConstantStructValue(e){const t=this.__globalConstantStructValues.findIndex(t=>t.variableName===e);-1!==t?this.__globalConstantStructValues.splice(t,1):console.error(`updateGlobalConstantStructValue:  the variable name ${e} is not exist`)}removeAttributeDeclaration(e){const t=this.__attributes.findIndex(t=>t.variableName===e);-1!==t?this.__attributes.splice(t,1):console.warn(`removeAttribute: the variable name ${e} is not exist`)}removeVaryingDeclaration(e){const t=this.__varyings.findIndex(t=>t.variableName===e);-1!==t?this.__varyings.splice(t,1):console.warn(`removeVarying: the variable name ${e} is not exist`)}removeUniformDeclaration(e){const t=this.__uniforms.findIndex(t=>t.variableName===e);-1!==t?this.__uniforms.splice(t,1):console.warn(`removeUniform: the variable name ${e} is not exist`)}removeUniformStructDeclaration(e){const t=this.__uniformStructs.findIndex(t=>t.variableName===e);-1!==t?this.__uniformStructs.splice(t,1):console.warn(`removeUniformStructDeclaration: the variable name ${e} is not exist`)}removeUniformBufferObjectDeclaration(e){const t=this.__uniformBufferObjects.findIndex(t=>t.blockName===e);-1!==t?this.__uniformBufferObjects.splice(t,1):console.warn(`removeUniformStructDeclaration: the variable name ${e} is not exist`)}removeFunctionDefinition(e){this.__fillEmptyFunctions(),(e<0||e>=this.__functionIdCount)&&console.warn("removeFunctionDefinition: invalid function id");for(const t of this.__functions){const i=t.findIndex(t=>t.functionId===e);if(-1!==i)return void t.splice(i,1)}console.warn("removeFunctionDefinition: not found the function of functionId "+e)}createShaderityObject(){return{code:this.__createShaderCode(),shaderStage:this.__shaderStage,isFragmentShader:"fragment"===this.__shaderStage}}static __existNonIntegerValue(e){for(const t of e)if(!Number.isInteger(t))return!0;return!1}__createShaderCode(){this.__fillEmptyFunctions();return"#version 300 es\n\n"+this.__createDefineDirectiveShaderCode()+this.__createExtensionShaderCode()+this.__createGlobalPrecisionShaderCode()+this.__createStructDefinitionShaderCode()+this.__createGlobalConstantValueShaderCode()+this.__createGlobalConstantStructValueShaderCode()+this.__createAttributeDeclarationShaderCode()+this.__createVaryingDeclarationShaderCode()+this.__createOutputColorDeclarationShaderCode()+this.__createUniformDeclarationShaderCode()+this.__createUniformStructDeclarationShaderCode()+this.__createUniformBufferObjectShaderCode()+this.__createFunctionDefinitionShaderCode()+this.__createMainFunctionDefinitionShaderCode()}__fillEmptyFunctions(){var e;for(let t=0;t<this.__functions.length;t++)this.__functions[t]=null!==(e=this.__functions[t])&&void 0!==e?e:[]}__createDefineDirectiveShaderCode(){let e="";for(const t of this.__defineDirectiveNames)e+=`#define ${t}\n`;return r.default._addLineFeedCodeIfNotNullString(e)}__createExtensionShaderCode(){let e="";for(const t of this.__extensions)e+=`#extension ${t.extensionName}: ${t.behavior}\n`;return r.default._addLineFeedCodeIfNotNullString(e)}__createGlobalPrecisionShaderCode(){let e="";for(const t in this.__globalPrecision){const i=t;e+=`precision ${this.__globalPrecision[i]} ${i};\n`}return r.default._addLineFeedCodeIfNotNullString(e)}__createStructDefinitionShaderCode(){let e="";for(const t of this.__structDefinitions){e+=`struct ${t.structName} {\n`;for(let i=0;i<t.memberObjects.length;i++){const n=t.memberObjects[i];e+="  ",null!=n.precision&&(e+=n.precision+" "),e+=`${n.type} ${n.memberName};\n`}e+="};\n"}return r.default._addLineFeedCodeIfNotNullString(e)}__createGlobalConstantValueShaderCode(){let e="";for(const t of this.__globalConstantValues){const i=t.type,n=t.variableName,r=t.values;e+=`const ${i} ${n} = ${i}(`;for(let t=0;t<r.length;t++)e+=r[t]+", ";e=e.replace(/,\s$/,");\n")}return r.default._addLineFeedCodeIfNotNullString(e)}__createGlobalConstantStructValueShaderCode(){let e="";for(const t of this.__globalConstantStructValues){const i=this.__structDefinitions.findIndex(e=>e.structName===t.structName);if(-1===i){console.error(`__createGlobalConstantStructValueShaderCode: the struct type ${t.structName} is not defined`);continue}e+=`const ${t.structName} ${t.variableName} = ${t.structName} (\n`;const n=this.__structDefinitions[i];if(n.memberObjects.length!==Object.keys(t.values).length){console.error(`__createGlobalConstantStructValueShaderCode: Invalid number of variables that ${t.variableName} has`);continue}if(n.memberObjects.some(e=>r.default._isSamplerType(e.type)))console.error(`__createGlobalConstantStructValueShaderCode: ConstantStructValue (${t.variableName}) cannot have sampler type parameter`);else{for(let i=0;i<n.memberObjects.length;i++){const a=n.memberObjects[i].memberName,o=t.values[a];if(null==o){console.error(`__createGlobalConstantStructValueShaderCode: ${t.variableName} does not have the value of ${a}`);continue}const s=n.memberObjects[i].type;if(r.default._isValidComponentCount(s,o)){e+=`  ${s}(`;for(let t=0;t<o.length;t++)e+=o[t]+", ";e=e.replace(/,\s$/,"),\n")}else console.error(`__createGlobalConstantStructValueShaderCode: the component count of ${a} in ${t.variableName} is invalid`)}e=e.replace(/,\n$/,"\n);\n")}}return r.default._addLineFeedCodeIfNotNullString(e)}__createAttributeDeclarationShaderCode(){let e="";for(const t of this.__attributes)null!=t.location&&(e+=`layout (location = ${t.location}) `),e+="in ",null!=t.precision&&(e+=t.precision+" "),e+=`${t.type} ${t.variableName};\n`;return r.default._addLineFeedCodeIfNotNullString(e)}__createVaryingDeclarationShaderCode(){let e="";for(const t of this.__varyings)null!=t.interpolationType&&(e+=t.interpolationType+" "),e+="vertex"==this.__shaderStage?"out ":"in ",null!=t.precision&&(e+=t.precision+" "),e+=`${t.type} ${t.variableName};\n`;return r.default._addLineFeedCodeIfNotNullString(e)}__createOutputColorDeclarationShaderCode(){return"fragment"!==this.__shaderStage?"":`layout(location = 0) out vec4 ${this.__outputColorVariableName};\n\n`}__createUniformDeclarationShaderCode(){let e="";for(const t of this.__uniforms)e+="uniform ",null!=t.precision&&(e+=t.precision+" "),e+=`${t.type} ${t.variableName};\n`;return r.default._addLineFeedCodeIfNotNullString(e)}__createUniformStructDeclarationShaderCode(){let e="";for(const t of this.__uniformStructs){const i=t.structName;this.__structDefinitions.some(e=>e.structName===i)?e+=`uniform ${i} ${t.variableName};\n`:console.error(`__createUniformStructDeclarationShaderCode: the struct type ${i} is not defined`)}return r.default._addLineFeedCodeIfNotNullString(e)}__createUniformBufferObjectShaderCode(){let e="";for(const t of this.__uniformBufferObjects){e+=`layout (std140) uniform ${t.blockName} {\n`;for(let i=0;i<t.variableObjects.length;i++){const n=t.variableObjects[i];e+=`  ${n.type} ${n.variableName};\n`}null!=t.instanceName?e+=`} ${t.instanceName};\n`:e+="};\n"}return r.default._addLineFeedCodeIfNotNullString(e)}__createFunctionDefinitionShaderCode(){let e="";for(let t=0;t<this.__functions.length;t++){const i=this.__functions[t];for(let t=0;t<i.length;t++)e+=i[t].functionCode+"\n"}return r.default._addLineFeedCodeIfNotNullString(e)}__createMainFunctionDefinitionShaderCode(){return this.__mainFunctionCode+"\n"}}t.default=a},function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{static evaluateCondition(e){let t=e;t=t.replace(/defined\s*\(\s*(\w+)\s*\)/g,(e,t)=>this.definitions.has(t)?"true":"false"),t=t.replace(/!\s*defined\s*\(\s*(\w+)\s*\)/g,(e,t)=>this.definitions.has(t)?"false":"true"),t=t.replace(/(\w+)\s*(==|!=|>|<|>=|<=)\s*(\d+)/g,(e,t,i,n)=>{const r=this.definitions.get(t);if(void 0===r)return"false";const a=parseInt(r),o=parseInt(n);switch(i){case"==":return a===o?"true":"false";case"!=":return a!==o?"true":"false";case">":return a>o?"true":"false";case"<":return a<o?"true":"false";case">=":return a>=o?"true":"false";case"<=":return a<=o?"true":"false";default:return"false"}});try{if(!/^[a-zA-Z0-9\s\(\)!&|]+$/.test(t))throw new Error("Invalid condition");return t=t.replace(/&&/g," && ").replace(/\|\|/g," || ").replace(/!/g," ! ").replace(/\s+/g," ").trim(),Function("return "+t)()}catch(e){return console.error("Error evaluating condition:",e),!1}}static process(e,t,i){const n=/#define[\t ]+(\w+)(?:[\t ]+(\S+))?/,r=/#ifdef[\t ]+(\w+)/,a=/#ifndef[\t ]+(\w+)/,o=/#if[\t ]+(.+)/,s=/#elif[\t ]+(.+)/,l=/#else/,c=/#endif/,u=[];let _=!0;const d=[],m=[],f=[];this.definitions.clear();let h=0,p=e.length;t&&(h=e.findIndex(e=>e.includes(t)),-1===h&&(h=0)),i&&(p=e.findIndex(e=>e.includes(i)),-1===p&&(p=e.length));for(let t=h;t<p;t++){const i=e[t];let h=!1;{const e=i.match(n);if(null!=e){const[t,i,n="1"]=e;this.definitions.set(i,n),h=!0}}{const e=i.match(r),t=i.match(a),n=i.match(o);if(e||t||n){u.push(_);let i="";e?i=`defined(${e[1]})`:t?i=`!defined(${t[1]})`:n&&(i=n[1]),d.push([i]),_?(_=this.evaluateCondition(i),m.push(_)):m.push(!1),h=!0}}{const e=i.match(s);if(null!=e){const t=e[1],i=d[d.length-1];u[u.length-1]&&!m[m.length-1]?(_=this.evaluateCondition(t),_&&(m[m.length-1]=!0)):_=!1,i.push(t),h=!0}}null!=i.match(l)&&(_=!!u[u.length-1]&&!m[m.length-1],h=!0);null!=i.match(c)&&(_=u[u.length-1],h=!0,d.pop(),m.pop(),u.pop());_&&!h&&f.push(i)}return f}}t.default=n,n.definitions=new Map}]).default}));